<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>207</x>
      <y>0</y>
      <w>477</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>DBConnection
Package::core/database
--
_+tryConnection(config: Array): PDO(objetc)_
--
Responsibilities
-- Try the conecction with the database and return that connection
-- If the connection couldn't be possible, 
then catch the error and return false</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>387</y>
      <w>702</w>
      <h>243</h>
    </coordinates>
    <panel_attributes>QueryBuilder
Package::core/database
--
- connection: PDO(objetc)
--
+ Database(PDO(interface): connection)
+ createOne(table_name: String, properties: Array): bool
+ selectAll(table_name: String): Array | null
+ selectOne(table_name: String, primary_key: String): Array | null
+ updateOne(table_name: String, primary_key: String, id_register: String, properties: Array): bool
+ deleteOne(table_name: String, primary_key: String, id_register: String): bool
--
Responsibilities
-- It will be the interface of the operations between the models and the database
of a generic form (usual operations how CRUD)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1890</x>
      <y>396</y>
      <w>657</w>
      <h>414</h>
    </coordinates>
    <panel_attributes>Model
Package::models/Model
--
_#string: table_name_
_#string: primary_key_
_#Array: properties_
--
+ Model(properties: Array)
+ get(string: propiedad): mixed
+ set(string: propiedad): void
+ updateProperties(properties: Array): void
_+ create(properties: Array): static_
_+ selectOne(id: String): static_
_+ selectOneBy(properties: Array): static_
_+ selectAll(): void_
+ save(properties: Array): bool
+ findOne(id: string): bool
+ findOneBy(properties: Array): bool
+ update(properties: Array): static | bool
+ delete(properties: Array): static | bool
--
Responsibilities
-- It must contain the common properties of the models
-- It must be an abstraccion of common operations of the models with the database</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1026</x>
      <y>387</y>
      <w>639</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>&lt;&lt;DependencyInjector&gt;&gt;
Injector
Package::core
--
_# dependencies: Array_
--
_+set(dependency_name: string, value: mixed)_
_+get(dependency_name: string)_
--
Responsibilities
-- It must store and return the dependencies that other classes or parts of the app need </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>675</x>
      <y>9</y>
      <w>369</w>
      <h>423</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;390.0;450.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>693</x>
      <y>405</y>
      <w>351</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1656</x>
      <y>414</y>
      <w>252</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1638</x>
      <y>306</y>
      <w>324</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Model needs the QueryBuilder dependency</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1881</x>
      <y>909</y>
      <w>666</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>User
Package::models/User
--
_#string: table_name_
_#string: primary_key_
--
+ User(properties: Array)
_+ queryUser(email_user: string, password: string): bool_
--
Responsibilities
-- It must define the properties of table_name and  primary_key to interact with the database
-- It must create their own methods for unique actions with the database</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2196</x>
      <y>801</y>
      <w>27</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>540</x>
      <y>324</y>
      <w>360</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>QueryBuilder needs the Connection dependency</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2799</x>
      <y>108</y>
      <w>513</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>BaseController
Package::controllers/BaseController
--
+ Controller()
# returnView(name: string, params: Array): void
# redirect(route: string): void
--
Responsibilities
-- It should be an abstraction of common actions of all of the controllers</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3465</x>
      <y>720</y>
      <w>423</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>UserController
Package::controllers/UserController
--
+ UserController()
+ createUser(): void
+ queryAllUsers(): void 
+ queryOneUser(): void
+ updateUser(): void
+ deleteUser(): void
--
Responsibilities
-- Make all CRUD operations with the users of the system</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2844</x>
      <y>1062</y>
      <w>432</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>SessionController
Package::controllers/SessionController
--
+ SessionController()
+ tryLogin(email_user: string, user_password: string): void
+ validateSession(): void
+ validateRol(): void
+ closeSession(): void
--
Responsibilities
-- Check the rol of the client to present their corresponding views
-- Validate if the session is active or no
-- Check the try of login and it will be succesful or no
-- Close the session when the client leaves his session</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3051</x>
      <y>252</y>
      <w>27</w>
      <h>828</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;900.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3429</x>
      <y>1062</y>
      <w>675</w>
      <h>297</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Helper&gt;&gt;
Authenticator
Package::core/helpers/Authenticator
--
+alert_credentials: bool_
+alert_session: bool_
--
+ Authenticator()
+ createSession(id_user: string, name_user: string, email_user: string, rol_user: admin): void
+ validateSession(): bool
+ deleteSession(): void
- startSession(): void
--
Responsibilities
-- Verify that the client has the session active and can get in the app
-- Check if the client does not have a session active and warn of it to block access
-- Create, verify and delete the session</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3267</x>
      <y>1071</y>
      <w>180</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>180.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2538</x>
      <y>918</y>
      <w>324</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3060</x>
      <y>252</y>
      <w>558</w>
      <h>486</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;600.0;520.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2538</x>
      <y>738</y>
      <w>945</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;200.0;1030.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1656</x>
      <y>414</y>
      <w>243</w>
      <h>540</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;250.0;580.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2601</x>
      <y>693</y>
      <w>441</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>The dependencies will be use with the InyectorDependency</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3267</x>
      <y>729</y>
      <w>216</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;380.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3897</x>
      <y>585</y>
      <w>558</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>StaticController
Package::controllers/StaticController
--
+ show404(): void
--
Responsibilities
-- Return all of the static views (withouth interaction with models to get data)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3078</x>
      <y>252</y>
      <w>1134</w>
      <h>351</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;1240.0;370.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5265</x>
      <y>882</y>
      <w>414</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>Handler
Package::core/router/Handler
--
Handler():
+ getURL(): string
--
Responsibilities
-- Return the URL of the request of the client by the URL</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4662</x>
      <y>882</y>
      <w>450</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>Router
Package::core/router/Router
--
- routes: Array
--
+ Router(routes: Array)
+ manageRequest(url: string)
--
Responsibilities
-- Take the URL and return the resource of the client needs
-- Centralize requests to control the requested resources
-- Instantiate the controller corresponding to the request</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5103</x>
      <y>945</y>
      <w>180</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4095</x>
      <y>972</y>
      <w>585</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;140.0;630.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3879</x>
      <y>738</y>
      <w>801</w>
      <h>261</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;870.0;270.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4446</x>
      <y>603</y>
      <w>234</w>
      <h>387</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;410.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1917</x>
      <y>1233</y>
      <w>603</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Security&gt;&gt;
Package::core/security/Encryptor
--
- COST: int
--
_+ EncryptPassword(password: string): string_
_+ comparePasswords(literal_password: string, encrypted_password: string) : bool_
--
Responsibilities
-- Define the cost of the encryption by securtiy of the passwords
-- Do encryption of the passwords
-- Compare passwords (literal and the encrypted)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2511</x>
      <y>1125</y>
      <w>351</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;220.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1881</x>
      <y>1089</y>
      <w>54</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>40.0;180.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
